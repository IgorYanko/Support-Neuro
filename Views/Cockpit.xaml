<UserControl x:Class="NeuroApp.Cockpit"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:classes="clr-namespace:NeuroApp.Classes"
             xmlns:sys="clr-namespace:NeuroApp.Screens"
             xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d"
             d:DesignHeight="750" d:DesignWidth="450">

    <UserControl.Resources>
        <classes:RemainingTimeToBrushConverter x:Key="TimeToBrushConverter"/>
        <classes:PauseButtonTextChanger x:Key="PauseButtonTextChanger"/>
        <classes:StatusEditableConverter x:Key="StatusEditableConverter"/>
        <classes:StatusConverter x:Key="StatusConverter"/>
        <classes:StringNotNullOrEmptyConverter x:Key="StringNotNullOrEmptyConverter"/>
        <CubicEase x:Key="MaterialDesignEasing" EasingMode="EaseInOut"/>
    </UserControl.Resources>

    <Grid>
        <Grid.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#F0F4F8" Offset="0"/>
                <GradientStop Color="#E8ECEF" Offset="1"/>
            </LinearGradientBrush>
        </Grid.Background>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Background="{DynamicResource MaterialDesignPaper}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0"
                    Style="{StaticResource MaterialDesignFlatButton}"
                    Height="56"
                    Padding="16,0"
                    Margin="0,0,0,0"
                    Click="BackButton_Click">

                <Button.Effect>
                    <DropShadowEffect BlurRadius="4" ShadowDepth="1" Opacity="0.2"/>
                </Button.Effect>
                
                <StackPanel Orientation="Horizontal">
                    <mat:PackIcon Kind="ArrowLeft" 
                               Width="24" Height="24"
                               VerticalAlignment="Center"/>
                    <TextBlock Text="Voltar" 
                             Margin="8,0,0,0"
                             VerticalAlignment="Center"/>
                </StackPanel>
            </Button>

            <TextBlock Grid.Column="1"
                     Text="Cockpit"
                     FontSize="35"
                     HorizontalAlignment="Center"
                     Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                     VerticalAlignment="Center"/>

            <Button x:Name="UpdateDataButton" Grid.Column="2" Width="90" Content="Atualizar" Command="{Binding UpdateCommand}"/>
        </Grid>

        <StackPanel Grid.Row="1" Background="#FF0078D7" Height="40" Margin="0,4,0,0">
            <Grid>
                <TextBlock Text="Ordens de Serviço"
                           FontSize="25"
                           FontWeight="Bold"
                           FontFamily="Segoe UI"
                           Foreground="White"
                           Padding="0 2 0 0"
                           HorizontalAlignment="Center"/>
            </Grid>
        </StackPanel>

        <Grid Margin="0 5 0 0" Grid.Row="2" Background="#FFFFFF">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Popup x:Name="ObservationPopUp"
                   IsOpen="{Binding IsPopupOpen, Mode=TwoWay}"
                   StaysOpen="True"
                   AllowsTransparency="True"
                   Placement="Bottom"
                   PopupAnimation="Slide"
                   HorizontalOffset="10"
                   VerticalOffset="5">
                <Border CornerRadius="10" 
                        Background="{DynamicResource MaterialDesignPaper}"
                        BorderBrush="{DynamicResource MaterialDesignerDivider}"
                        BorderThickness="1"
                        Padding="10"
                        Effect="{StaticResource MaterialDesignShadowDepth2}">
                    <Grid Width="300" Height="150">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0"
                                   Text="Observação"
                                   FontSize="18"
                                   FontWeight="SemiBold"
                                   Foreground="{DynamicResource MaterialDesignBody}"
                                   Margin="0 0 0 5"/>

                        <TextBlock x:Name="PopupText"
                                   Grid.Row="1"
                                   Text="{Binding Observation, FallbackValue=''}"
                                   Foreground="{DynamicResource MaterialDesignBody}"
                                   FontSize="14"
                                   Margin="0, 0, 0, 5"
                                   TextWrapping="Wrap"
                                   TextAlignment="Left"/>

                        <Button Grid.Row="2"
                                Style="{StaticResource MaterialDesignFlatButton}"
                                Content="Fechar"
                                HorizontalAlignment="Right"
                                Click="ClosePopupButton_Click"/>
                    </Grid>
                </Border>
            </Popup>


            <DataGrid x:Name="DataGridSales"
                      Grid.Column="0"
                      AutoGenerateColumns="False"
                      ItemsSource="{Binding SalesData}"
                      Style="{DynamicResource MaterialDesignDataGrid}"
                      RowBackground="{DynamicResource MaterialDesignBackground}"
                      AlternatingRowBackground="#F5F5F5"
                      CanUserReorderColumns="False"
                      CanUserSortColumns="False"
                      CanUserResizeColumns="False"
                      CanUserResizeRows="False"
                      CanUserAddRows="False"
                      AllowDrop="True"
                      Margin="0 10 0 10"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      Loaded="UserControl_Loaded"
                      Unloaded="UserControl_Unloaded"
                      DragOver="DataGridSales_DragOver"
                      BeginningEdit="DataGridSales_BeginningEdit"
                      PreviewMouseLeftButtonDown="DataGridSales_PreviewMouseLeftButtonDown"
                      PreviewMouseMove="DataGridSales_PreviewMouseMove"
                      MouseMove="DataGridSales_MouseMove"
                      Drop="DataGridSales_Drop"
                      MouseRightButtonDown="DataGridSales_MouseRightButtonDown"
                      PreviewMouseLeftButtonUp="DataGridSales_PreviewMouseLeftButtonUp"
                      VirtualizingPanel.IsVirtualizing="False"
                      BorderBrush="Black"
                      SelectedItem="{Binding SelectedSale}"
                      RenderTransformOrigin="0.5,0.5">
                <DataGrid.Resources>
                    <Style x:Key="DefaultCellStyle" TargetType="TextBlock">
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>

                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="Foreground" Value="#FF0078D7"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="10"/>
                    </Style>

                    <Style TargetType="DataGridCell">
                        <Setter Property="Background" Value="{Binding ., Converter={StaticResource TimeToBrushConverter}, ConverterParameter=Background}"/>
                        <Setter Property="Foreground" Value="{Binding ., Converter={StaticResource TimeToBrushConverter}, ConverterParameter=Foreground}"/>
                        <Setter Property="Padding" Value="10"/>
                        <Setter Property="FontSize" Value="16"/>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">

                        <Setter Property="Height" Value="Auto"/>
                        <Setter Property="MinHeight" Value="50"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F5F5F5"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#E3F2FD"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#BBDEFB"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Obs" Width="60" MinWidth="60">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button x:Name="ObservationButton"
                                        Width="30"
                                        Margin="5 0"
                                        IsHitTestVisible="True"
                                        CommandParameter="{Binding}"
                                        Command="{Binding DataContext.ShowObservationsCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource RoundedButton}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Observation}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Observation}" Value="">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Observation, Converter={StaticResource StringNotNullOrEmptyConverter}}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
								
							        <mat:PackIcon Kind="Close" 
                                                  Width="20" Height="20"
                                                  VerticalAlignment="Center"/>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    
                    <DataGridTextColumn Header="Nº OS" Width="Auto" MinWidth="100" Binding="{Binding Code}" IsReadOnly="True" ElementStyle="{StaticResource DefaultCellStyle}"/>
                    <DataGridTextColumn Header="Cliente" Width="*" MinWidth="210" Binding="{Binding PersonName}" IsReadOnly="True" ElementStyle="{StaticResource DefaultCellStyle}"/>
                    <DataGridTextColumn Header="Data de Chegada" Width="Auto" MinWidth="90" Binding="{Binding DateCreated, StringFormat=\{0:dd/MM/yyyy\}}" IsReadOnly="True" ElementStyle="{StaticResource DefaultCellStyle}"/>
                    <DataGridTextColumn Header="Tipo" Width="Auto" MinWidth="140" Binding="{Binding DisplayType}" IsReadOnly="True" ElementStyle="{StaticResource DefaultCellStyle}"/>

                    <DataGridTemplateColumn Header="Status" Width="Auto" MinWidth="165">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DisplayStatus}" Style="{StaticResource DefaultCellStyle}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding StatusList}"
                                          FontSize="16"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Width="Auto"
                                          SelectedItem="{Binding Status, Mode=TwoWay, Converter={StaticResource StatusConverter}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Tag" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <ItemsControl ItemsSource="{Binding MappedTags}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Border Background="{Binding Color}"
                                                    CornerRadius="5"
                                                    Padding="5,2"
                                                    Margin="2">
                                                    <TextBlock Text="{Binding Name}"
                                                   FontSize="14"
                                                   Foreground="{Binding TextColor}"/>
                                                </Border>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>

                <DataGrid.ContextMenu>
                    <ContextMenu Background="White" BorderBrush="#E0E0E0" BorderThickness="1">
                        <ContextMenu.Resources>
                            <Style TargetType="MenuItem">
                                <Setter Property="Padding" Value="20,10"/>
                                <Setter Property="FontSize" Value="14"/>
                                <Setter Property="Height" Value="40"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#F5F5F5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ContextMenu.Resources>
                        <MenuItem Header="Adicionar observação" Click="AddObservation_Click" FontFamily="Segoe UI" Foreground="#FF0078D7"/>
                        <MenuItem Header="Remover OS" Click="RemoveOs_Click" FontFamily="Segoe UI" Foreground="#FF0078D7"/>
                        <MenuItem Header="{Binding PlacementTarget.SelectedItem.IsPaused,
                                       RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, 
                                       Converter={StaticResource PauseButtonTextChanger}}" Click="PauseOs_Click" FontFamily="Segoe UI" Foreground="#FF0078D7"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
            </DataGrid>
        </Grid>

        <Grid Grid.Row="2" 
              Background="#80000000" 
              Visibility="Collapsed"
              x:Name="LoadingOverlay">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <ProgressBar Grid.Row="1"
                         Style="{StaticResource MaterialDesignCircularProgressBar}"
                         Value="0"
                         IsIndeterminate="True"
                         Width="50"
                         Height="50"/>

            <TextBlock Grid.Row="1"
                     Text="Carregando..."
                     Foreground="White"
                     FontSize="16"
                     Margin="0,60,0,0"
                     HorizontalAlignment="Center"/>
        </Grid>
    </Grid>
</UserControl>